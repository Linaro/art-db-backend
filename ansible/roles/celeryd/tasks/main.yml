
---
- name: Install Supervisor
  pip: name=supervisor
  tags:
    - install
    - update

- name: ensuring required supervisor directories
  file: path={{item}}
        state=directory
        owner={{apache_user}} group={{apache_user}}
  with_items:
    - '{{supervisor_dir}}'
    - '{{supervisor_config_dir}}'
    - '{{supervisor_log_dir}}'

- name: Copy supervisord.conf
  when: supervisord_conf is defined
  template: src=templates/supervisord.conf
            dest={{supervisord_conf}}
            owner={{apache_user}} group={{apache_user}} mode=0755
  tags:
    - install
    - update
    - celery

- name: Copy supervisor service files
  template: src={{item.src}}
            dest={{item.dest}}
            owner={{apache_user}} group={{apache_user}} mode=0755
  with_items:
    - { src: 'templates/supervisor.celerycam.conf', dest: '{{supervisor_config_dir}}/{{hostname}}.celerycam.conf' }
    - { src: 'templates/supervisor.celeryd.conf', dest: '{{supervisor_config_dir}}/{{hostname}}.celeryd.conf' }
    - { src: 'templates/supervisor.celerybeat.conf', dest: '{{supervisor_config_dir}}/{{hostname}}.celerybeat.conf' }    
  tags:
    - install
    - update
    - celery

- name: checking if supervisord is running
  shell: pgrep -u {{ apache_user }} supervisor
  ignore_errors: on
  changed_when: off
  register: supervisor_running

- name: running supervisord
  shell: "{{supervisord_bin}} -c {{supervisord_conf}}"
  sudo_user: "{{apache_user}}"
  when: supervisor_running|failed
  tags:
    - install
    - update
    - celery

- name: start supervisord on boot
  template: src=templates/supervisor.cron
            dest=/etc/cron.d/supervisor
            owner=root group=root mode=0644

- name: supervisor restart
  shell: "{{supervisorctl_bin}} -c {{supervisord_conf}} restart all"
  sudo_user: "{{apache_user}}"

- name: supervisor update
  shell: "{{supervisorctl_bin}} -c {{supervisord_conf}} update"
  sudo_user: "{{apache_user}}"

