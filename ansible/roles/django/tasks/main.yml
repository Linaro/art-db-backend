---
- name: Install required system packages
  apt: pkg={{item}} state=installed update-cache=yes
  with_items:
    - git
    - apache2
    - libapache2-mod-wsgi
    - python-dev
    - python-pip
    - python-virtualenv
  tags:
    - install
    - update


- name: Upgrade PIP manager
  pip: name=pip extra_args="-U"
  pip: name=virtualenv extra_args="-U"

  tags:
    - install
    - update


- name: Checkout application code
  # NOTE: we can't use "accept_hostkey=yes" because the user we clone as
  # will likely not have a proper .ssh directory. We instead use ssh_opts
  git: repo={{git_repo}}
       dest={{install_base}}/project
       version={{git_tag}}
       update=yes
       ssh_opts="-o StrictHostKeyChecking=no"
  sudo_user: "{{apache_user}}"
  notify: restart-apache
  tags:
    - install
    - update
    - django

- name: Install required application packages
  sudo_user: "{{apache_user}}"
  pip: >
    requirements={{install_base}}/project/requirements.txt
    virtualenv={{install_base}}/.virtualenv
  tags:
    - install
    - update

- name: Copy index.wsgi
  sudo_user: "{{apache_user}}"
  when: django_local_wsgi is defined
  template: src={{django_local_wsgi}}
            dest={{install_base}}/index.wsgi
            owner={{apache_user}} group={{apache_user}} mode=0755
  notify: restart-apache
  tags:
    - install
    - update
    - django

- name: Copy local settings
  sudo_user: "{{apache_user}}"
  when: django_local_settings is defined
  template: src={{django_local_settings}}
            dest={{django_app_root}}/crayonbox/settings/private.py
            owner={{apache_user}} group={{apache_user}} mode=0755
  notify: restart-apache
  tags:
    - install
    - update
    - django

- name: Run syncdb command
  django_manage: app_path={{django_app_root}}
                 settings={{django_settings}}
                 virtualenv={{install_base}}/.virtualenv
                 command=syncdb
  tags:
    - update
    - django

- name: Run migrations (if installed)
  django_manage: app_path={{django_app_root}}
                 settings={{django_settings}}
                 virtualenv={{install_base}}/.virtualenv
                 command=migrate
  tags:
    - django
    - update

- name: Run collectstatic (if supported)
  django_manage: app_path={{django_app_root}}
                 settings={{django_settings}}
                 virtualenv={{install_base}}/.virtualenv
                 command=collectstatic
  register: django_static
  failed_when: 'django_static.failed and (django_static.msg is defined and ("Unknown django command" not in django_static.msg))'
  notify: restart-apache
  tags:
    - update
    - django

- name: Enable mod_wsgi
  command:  a2enmod {{ item }}
            creates=/etc/apache2/mods-enabled/{{ item }}.load
  with_items: apache_modules
  notify: restart-apache
  tags:
      - install
